// —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –æ—Ç–º–µ—á–µ–Ω–Ω—ã–º–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–º–∏ —Ä–µ—Ü–µ–ø—Ç–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

import React, { useEffect, useState } from 'react';
import { useSelector, useDispatch } from 'react-redux';

import { RecipeBlock } from '../../components/RecipeBlock';
import { formatCookingTime } from '../../utils/timeUtils';
import { fetchFavoriteRecipes } from '../../redux/slices/auth';
import { PaginationOnPage } from '../../components/PaginationOnPage';

import styles from './FavoritesBook.module.scss';
import Grid from '@mui/material/Grid';

export const FavoritesBook = () => {
  const dispatch = useDispatch();

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –µ–≥–æ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–∞—Ö –∏–∑ Redux store
  const userData = useSelector((state) => state.auth.data);
  const favoriteRecipes = useSelector((state) => state.auth.favoriteRecipes);
  const isAuth = useSelector((state) => !!state.auth.data);

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
  const [currentPage, setCurrentPage] = useState(1);
  const totalPages = useSelector((state) => state.recipes.recipes.totalPages);

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
  useEffect(() => {
    if (isAuth) {
      dispatch(fetchFavoriteRecipes({ page: currentPage, limit: 9 }));
    }
  }, [dispatch, isAuth, currentPage]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
  const handlePageChange = (event, value) => {
    setCurrentPage(value);
    dispatch(fetchFavoriteRecipes({ page: value, limit: 9 }));
  };

  return (
    <div className={styles.myResipesContainer}>
      <h2 className={styles.title}>–ú–æ—è –∫–Ω–∏–≥–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤</h2>
      {/* –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤ */}
      {favoriteRecipes.length === 0 ? (
        <div className={styles.noRecipesMessage}>
          –í –≤–∞—à–µ–π –∫–Ω–∏–≥–µ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞ üòû
          <br />
          –°–∫–æ—Ä–µ–µ —Å–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ –∏ –Ω–∞—á–Ω–∏—Ç–µ –≥–æ—Ç–æ–≤–∏—Ç—å üëç
        </div>
      ) : (
        <Grid container spacing={2}>
          {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤ */}
          {favoriteRecipes.map((recipe, index) => (
            <Grid item xs={12} sm={6} md={4} key={recipe._id || index}>
              <RecipeBlock
                // key={recipe._id || index}
                id={recipe._id}
                formattedCookingTime={formatCookingTime(recipe.cookingTime)}
                calories={recipe.totalCalories ? recipe.totalCalories.toFixed(2) : 0}
                isAuthor={userData && recipe.user && userData._id === recipe.user}
                {...recipe}
              />
            </Grid>
          ))}
        </Grid>
      )}
      {/* –ø–∞–≥–∏–Ω–∞—Ü–∏—è */}
      <PaginationOnPage
        totalPages={totalPages}
        currentPage={currentPage}
        handlePageChange={handlePageChange}
      />
    </div>
  );
};
