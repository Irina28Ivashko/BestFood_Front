// —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Å–æ–∑–¥–∞–Ω–Ω—ã–º–∏ —Ä–µ—Ü–µ–ø—Ç–∞–º–∏ –∞–≤—Ç–æ—Ä–∞

import React, { useEffect, useState } from 'react';

import { fetchMyRecipes } from '../../redux/slices/recipes';
import { useSelector, useDispatch } from 'react-redux';
import { RecipeBlock } from '../../components/RecipeBlock';
import { formatCookingTime } from '../../utils/timeUtils';
import { PaginationOnPage } from '../../components/PaginationOnPage';

import styles from './MyRecipes.module.scss';
import Grid from '@mui/material/Grid';

export const MyRecipes = () => {
  const dispatch = useDispatch();

  // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ä–µ—Ü–µ–ø—Ç—ã –∏ –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const { items: recipes = [], totalPages } = useSelector((state) => state.recipes.recipes);

  const userData = useSelector((state) => state.auth.data); // –î–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const [currentPage, setCurrentPage] = useState(1); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ currentPage
  useEffect(() => {
    dispatch(fetchMyRecipes({ page: currentPage, limit: 9 }));
  }, [currentPage, dispatch]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
  const handlePageChange = (event, value) => {
    setCurrentPage(value);
    dispatch(fetchMyRecipes({ page: value, limit: 9 }));
  };

  return (
    <div className={styles.myRecipesContainer}>
      <h2 className={styles.title}>–ú–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã</h2>

      {recipes.length === 0 ? (
        // –°–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤
        <div className={styles.noRecipesMessage}>–í—ã –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞ üòû</div>
      ) : (
        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–µ—Ç–∫–∏ —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        <Grid container spacing={2}>
          {recipes.map((recipe) => (
            <Grid item xs={12} sm={6} md={4} key={recipe._id}>
              <RecipeBlock
                id={recipe._id}
                formattedCookingTime={formatCookingTime(recipe.cookingTime)}
                calories={recipe.totalCalories ? recipe.totalCalories.toFixed(2) : 0}
                isAuthor={userData && recipe.user && userData._id === recipe.user}
                {...recipe}
              />
            </Grid>
          ))}
        </Grid>
      )}

      {/* –ø–∞–≥–∏–Ω–∞—Ü–∏—è */}
      <PaginationOnPage
        totalPages={totalPages}
        currentPage={currentPage}
        handlePageChange={handlePageChange}
      />
    </div>
  );
};
