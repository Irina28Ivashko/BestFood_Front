// —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Å–æ–∑–¥–∞–Ω–Ω—ã–º–∏ —Å—Ç–∞—Ç—å—è–º–∏ –∞–≤—Ç–æ—Ä–∞

import React, { useEffect, useState } from 'react';
import axios from '../../axios';
import { useDispatch, useSelector } from 'react-redux';
import { Post } from '../../components/Post';
import { fetchRemovePost } from '../../redux/slices/posts';
import { PaginationOnPage } from '../../components/PaginationOnPage';

import styles from './MyPosts.module.scss';
import Grid from '@mui/material/Grid';

export const MyPosts = () => {
  const dispatch = useDispatch();
  const [posts, setPosts] = useState([]); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

  const userData = useSelector((state) => state.auth.data); // –î–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Redux store
  const [currentPage, setCurrentPage] = useState(1); // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
  const totalPages = useSelector((state) => state.posts.posts.totalPages); // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ currentPage –∏–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    if (userData) {
      axios
        .get('/posts/my', {
          headers: { Authorization: `Bearer ${userData.token}` }, // –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö
        })
        .then(({ data }) => {
          setPosts(data); // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        })
        .catch((error) => {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–∏—Ö —Å—Ç–∞—Ç–µ–π:', error);
        });
    }
  }, [userData, currentPage]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
  const handlePageChange = (event, value) => {
    setCurrentPage(value);
  };

  if (!posts) {
    return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>; // –∏–ª–∏ –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—å–∏
  const handleDelete = (id) => {
    if (window.confirm('–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ç—å—é?')) {
      dispatch(fetchRemovePost(id));
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏
  const handleEdit = (id) => {
    // –†–µ–∞–ª–∏–∑—É–π—Ç–µ –ª–æ–≥–∏–∫—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏
    console.log('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ —Å ID:', id);
  };

  return (
    <div className={styles.myPostsContainer}>
      <h2 className={styles.title}>–ú–æ–∏ —Å—Ç–∞—Ç—å–∏</h2>
      <div className={styles.gridContainer}>
        {posts.length === 0 ? (
          // –°–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ —Å—Ç–∞—Ç—å–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç
          <div className={styles.noPostsMessage}>–í—ã –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π —Å—Ç–∞—Ç—å–∏ üòû</div>
        ) : (
          // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—Ç–∞—Ç–µ–π
          <Grid container spacing={2}>
            {posts.map((post) => (
              <Grid item xs={12} sm={6} md={4} key={post._id}>
                <Post
                  id={post._id}
                  onDelete={() => handleDelete(post._id)}
                  onEdit={() => handleEdit(post._id)}
                  isEditable={userData && post.user && userData._id === post.user._id}
                  {...post}
                />
              </Grid>
            ))}
          </Grid>
        )}

        {/* –ü–∞–≥–∏–Ω–∞—Ü–∏—è */}
        <PaginationOnPage
          totalPages={totalPages}
          currentPage={currentPage}
          handlePageChange={handlePageChange}
        />
      </div>
    </div>
  );
};
